<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\Blink.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\Blink.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 24]: Last Updated: Fri Jun 09 13:51:55 2017
<BR><P>
<H3>Maximum Stack Usage =         16 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; ClkCfg
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[4a]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[2c]">DMA_ADC0_Int_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">DMA_ADC0_Int_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[19]">ADC0_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1a]">ADC1_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2c]">DMA_ADC0_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2d]">DMA_ADC1_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2b]">DMA_DAC_Out_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[22]">DMA_Err_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2a]">DMA_I2C0_MRX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[29]">DMA_I2C0_MTX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[28]">DMA_I2C0_SRX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[27]">DMA_I2C0_STX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2e]">DMA_SINC2_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[24]">DMA_SPI1_RX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[23]">DMA_SPI1_TX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[26]">DMA_UART_RX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[25]">DMA_UART_TX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[e]">Ext_Int0_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[f]">Ext_Int1_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[10]">Ext_Int2_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[11]">Ext_Int3_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[12]">Ext_Int4_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[13]">Ext_Int5_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[14]">Ext_Int6_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[15]">Ext_Int7_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1c]">Flsh_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[17]">GP_Tmr0_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[18]">GP_Tmr1_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[21]">I2C0_Master_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[20]">I2C0_Slave_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[30]">PWM0_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[31]">PWM1_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[32]">PWM2_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2f]">PWMTRIP_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1b]">SINC2_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1e]">SPI0_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1f]">SPI1_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1d]">UART_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[16]">WDog_Tmr_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[d]">WakeUp_Int_Handler</a> from blink.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[34]">__main</a> from __main.o(!!!main) referenced from startup_aducm360.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[34]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[35]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[37]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[4c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[4d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[4e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[3b]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[4f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[50]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[51]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[52]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[53]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[54]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[55]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[56]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[57]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[58]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[59]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[5a]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[5b]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[5c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[5d]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[5e]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[5f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[60]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[61]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[62]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[40]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[63]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[64]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[65]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[66]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[67]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[68]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[36]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[69]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[38]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3a]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[6a]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[3c]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; ClkCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6b]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[4b]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3f]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[6c]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[41]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA_ADC0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ADC0_Int_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ADC0_Int_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA_ADC1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA_DAC_Out_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA_Err_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA_I2C0_MRX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA_I2C0_MTX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA_I2C0_SRX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA_I2C0_STX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA_SINC2_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA_SPI1_RX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA_SPI1_TX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA_UART_RX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA_UART_TX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Ext_Int0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Ext_Int1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>Ext_Int3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>Ext_Int5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>Ext_Int6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>Ext_Int7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>Flsh_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C0_Master_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WDog_Tmr_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_aducm360.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[48]"></a>delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, blink.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>main</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, blink.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = main &rArr; ClkCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WdtCfg
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DioTgl
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DioOen
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClkDis
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClkCfg
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[d]"></a>WakeUp_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Ext_Int2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>Ext_Int4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>GP_Tmr0_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>GP_Tmr1_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ADC0_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC1_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SINC2_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>UART_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C0_Slave_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>PWMTRIP_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>PWM0_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>PWM1_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>PWM2_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, blink.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DioCfg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>DioDrv</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>DioOen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>DioPul</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>DioOce</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>DioTriState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>DioCfgPin</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>DioOenPin</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>DioPulPin</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>DioOcePin</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>DioTriStatePin</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>DioRd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>DioWr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>DioSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>DioClr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>DioTgl</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, diolib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[43]"></a>WdtCfg</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, wdtlib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WdtCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>WdtGo</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>WdtLd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>WdtVal</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>WdtSta</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>WdtClrInt</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>ClkCfg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, clklib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ClkCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>ClkSel</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, clklib.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>ClkDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clklib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>XOSCCfg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clklib.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3e]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[85]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[86]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[87]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
