<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Obj\AdcExample.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Obj\AdcExample.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 24]: Last Updated: Wed Jul 25 08:59:46 2018
<BR><P>
<H3>Maximum Stack Usage =         28 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UARTINIT &rArr; UrtCfg
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[29]">DMA_ADC0_Int_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">DMA_ADC0_Int_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ADC0_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[17]">ADC1_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[29]">DMA_ADC0_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2a]">DMA_ADC1_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[28]">DMA_DAC_Out_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1f]">DMA_Err_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[27]">DMA_I2C0_MRX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[26]">DMA_I2C0_MTX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[25]">DMA_I2C0_SRX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[24]">DMA_I2C0_STX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2b]">DMA_SINC2_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[21]">DMA_SPI1_RX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[20]">DMA_SPI1_TX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[23]">DMA_UART_RX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[22]">DMA_UART_TX_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[b]">Ext_Int0_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[c]">Ext_Int1_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[d]">Ext_Int2_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[e]">Ext_Int3_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[f]">Ext_Int4_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[10]">Ext_Int5_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[11]">Ext_Int6_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[12]">Ext_Int7_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[19]">Flsh_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[14]">GP_Tmr0_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[15]">GP_Tmr1_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1e]">I2C0_Master_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1d]">I2C0_Slave_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2d]">PWM0_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2e]">PWM1_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2f]">PWM2_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[2c]">PWMTRIP_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[18]">SINC2_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1b]">SPI0_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1c]">SPI1_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[1a]">UART_Int_Handler</a> from adcmeter.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[13]">WDog_Tmr_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[a]">WakeUp_Int_Handler</a> from startup_aducm360.o(.text) referenced from startup_aducm360.o(RESET)
 <LI><a href="#[31]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_aducm360.o(.text)
 <LI><a href="#[32]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[30]">main</a> from adcmeter.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[31]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[33]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[61]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[6a]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[6b]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[6c]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[6d]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[6e]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>DMA_ADC0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ADC0_Int_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ADC0_Int_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>DMA_ADC1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>DMA_DAC_Out_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA_Err_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>DMA_I2C0_MRX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>DMA_I2C0_MTX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>DMA_I2C0_SRX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA_I2C0_STX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA_SINC2_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA_SPI1_RX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA_SPI1_TX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA_UART_RX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA_UART_TX_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>Ext_Int0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Ext_Int1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Ext_Int3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>Ext_Int5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>Ext_Int6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>Ext_Int7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>Flsh_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>I2C0_Master_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C0_Slave_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI0_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI1_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WDog_Tmr_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WakeUp_Int_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_aducm360.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ADC1INIT</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, adcmeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC1INIT &rArr; AdcRng
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcRng
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcPin
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcMski
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcFlt
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>DACINIT</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, adcmeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DACINIT &rArr; DacCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacWr
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>UARTINIT</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, adcmeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UARTINIT &rArr; UrtCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UrtMod
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UrtIntCfg
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UrtCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[30]"></a>main</STRONG> (Thumb, 238 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = main &rArr; UARTINIT &rArr; UrtCfg
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WdtCfg
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UrtTx
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DioTgl
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DioOen
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClkSel
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClkDis
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClkCfg
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcGo
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTINIT
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACINIT
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1INIT
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6f]"></a>delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, adcmeter.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>Ext_Int2_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Ext_Int4_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GP_Tmr0_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>GP_Tmr1_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ADC0_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>ADC1_Int_Handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, adcmeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC1_Int_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcRd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SINC2_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>UART_Int_Handler</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, adcmeter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Int_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UrtRx
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UrtLinSta
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UrtIntSta
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PWMTRIP_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PWM0_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PWM1_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>PWM2_Int_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_aducm360.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>WdtCfg</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, wdtlib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WdtCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>WdtGo</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>WdtLd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>WdtVal</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>WdtSta</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[74]"></a>WdtClrInt</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wdtlib.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>AdcRng</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, adclib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AdcRng
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1INIT
</UL>

<P><STRONG><a name="[37]"></a>AdcFlt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, adclib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AdcFlt
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1INIT
</UL>

<P><STRONG><a name="[47]"></a>AdcGo</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, adclib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = AdcGo
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>AdcSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, adclib.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>AdcDetSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, adclib.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>AdcRd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, adclib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Int_Handler
</UL>

<P><STRONG><a name="[77]"></a>AdcStpRd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, adclib.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>AdcBuf</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, adclib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AdcBuf
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1INIT
</UL>

<P><STRONG><a name="[78]"></a>AdcDiag</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adclib.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>AdcPin</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, adclib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AdcPin
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1INIT
</UL>

<P><STRONG><a name="[36]"></a>AdcMski</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, adclib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1INIT
</UL>

<P><STRONG><a name="[79]"></a>AdcBias</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, adclib.o(.text), UNUSED)

<P><STRONG><a name="[7a]"></a>AdcPGAErr</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, adclib.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>AdcDetCon</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, adclib.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>AdcDmaCon</STRONG> (Thumb, 194 bytes, Stack size 0 bytes, adclib.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>ClkCfg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, clklib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ClkCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>ClkSel</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, clklib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>ClkDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clklib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>XOSCCfg</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clklib.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>DacWr</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, daclib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACINIT
</UL>

<P><STRONG><a name="[3c]"></a>DacCfg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, daclib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DacCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DACINIT
</UL>

<P><STRONG><a name="[7e]"></a>DacSync</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, daclib.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>DacDma</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, daclib.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>DioCfg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>DioDrv</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>DioOen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>DioPul</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>DioOce</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>DioTriState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[85]"></a>DioCfgPin</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>DioOenPin</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>DioPulPin</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>DioOcePin</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>DioTriStatePin</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>DioRd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>DioWr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>DioSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>DioClr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, diolib.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>DioTgl</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, diolib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>UrtCfg</STRONG> (Thumb, 152 bytes, Stack size 20 bytes, urtlib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UrtCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTINIT
</UL>

<P><STRONG><a name="[8e]"></a>UrtBrk</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, urtlib.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>UrtLinSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, urtlib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Int_Handler
</UL>

<P><STRONG><a name="[4f]"></a>UrtTx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, urtlib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>UrtRx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, urtlib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Int_Handler
</UL>

<P><STRONG><a name="[40]"></a>UrtMod</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, urtlib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTINIT
</UL>

<P><STRONG><a name="[8f]"></a>UrtModSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, urtlib.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>UrtDma</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, urtlib.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>UrtIntCfg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, urtlib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTINIT
</UL>

<P><STRONG><a name="[52]"></a>UrtIntSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, urtlib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Int_Handler
</UL>

<P><STRONG><a name="[4e]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b]"></a>__aeabi_fmul</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_i2f</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[92]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>_float_epilogue</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5e]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[34]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[94]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[95]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[96]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[97]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5a]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[62]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[98]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[4d]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[9a]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[9b]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[9c]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[9d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[48]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, adcmeter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>_fp_digits</STRONG> (Thumb, 326 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[63]"></a>_printf_core</STRONG> (Thumb, 1762 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[67]"></a>_printf_post_padding</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[66]"></a>_printf_pre_padding</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[32]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
